# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Run Rspec

on: push

jobs:
  run_spec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    strategy:
      matrix:
        ruby-version: ['2.7.8']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    
    - name: Cache bundle gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-${{ env.cache-name }}-
          ${{ runner.os }}-gem-
          ${{ runner.os }}-

    - name: Setup Node.js and Yarn
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'
        cache: npm
        yarn: true

    - name: Install dependencies
      run: |
        gem install bundler -v 2.1.4
        bundle install --jobs 4 --retry 3

    - name: Install library for postgres
      run: sudo apt install -y libpq-dev

    - name: setup DB
      run: |
        bundle exec rails yarn:install db:setup
      env:
        RAILS_ENV: test
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres

    - name: Run Rspec
      run: bundle exec rspec
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml,!./cache
        flags: unittests
        name: ruby-for-codecov
        verbose: true
